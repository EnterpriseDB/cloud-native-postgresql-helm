name: continuous-delivery

on:
  push:
  pull_request:

jobs:
  linter:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch=main)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --target-branch=main

  install_deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Create kind cluster
        uses: helm/kind-action@v1.0.0

      - name: Deploy using helm chart
        run: |
          helm upgrade --install cnp --namespace postgresql-operator-system \
          --create-namespace cloud-native-postgresql --wait

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      - name: Deploy a cluster
        run: |
          cat <<EOF | kubectl apply -f -
          # Example of PostgreSQL cluster
          apiVersion: postgresql.k8s.enterprisedb.io/v1
          kind: Cluster
          metadata:
            name: cluster-example
          spec:
            instances: 3
            storage:
             size: 1Gi
          EOF

          ITER=0
          while true; do
            if [[ $ITER -ge 300 ]]; then
              echo "Cluster not ready"
              exit 1
            fi
            READY_INSTANCES=$(kubectl get cluster cluster-example -o jsonpath='{.status.readyInstances}')
            if [[ "$READY_INSTANCES" == 3 ]]; then
              echo "Cluster up and running"
              break
            fi
            sleep 1
            (( ++ITER ))
          done
